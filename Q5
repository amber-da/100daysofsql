CIBIL score, often referred to as a credit score, is a numerical representation of an individual's creditworthiness.While the exact formula used by credit bureaus like CIBIL may not be publicly disclosed and can vary slightly between bureaus, the following are some common factors that typically influence the calculation of a credit score:

Payment History: This accounts for the largest portion of your credit score. It includes factors such as whether you pay your bills on time, any late payments, defaults, bankruptcies, etc. Assume this accounts for 70 percent of your credit score.

Credit Utilization Ratio: This is the ratio of your credit card balances to your credit limits. Keeping this ratio low (ideally below 30%) indicates responsible credit usage. Assume it accounts for 30% of your score and below logic to calculate it: 

           Utilization below 30% = 1

           Utilization between 30% and 50% = 0.7

           Utilization above 50% = 0.5

Assume that we have credit card bills data for March 2023 based on that we need to calculate credit utilization ratio.

 

Final Credit score formula = (on_time_loan_or_bill_payment)/total_bills_and_loans * 70 + Credit Utilization Ratio * 30 

 

Table: customers(primary key : customer_id )

column name	data type 
customer_id 	int
credit_limit 	int
 

Table: loans(primary key : loan_id )

column name	data type 
customer_id 	int
loan_id 	int
loan_due_date 	date


Table: credit_card_bills(primary key : bill_id )

column name	data type 
customer_id 	int
bill_id 	int
bill_due_date 	date
balance_amount 	int

Table: customer_transactions(primary key : loan_bill_id )

column name	data type 
loan_bill_id 	int
transaction_type 	varchar(10)
transaction_date	date
  

Expected Output: 

customer_id	cibil_score
1	82.5
2	91.0



My Solution

With cur as (
select c.customer_id
, sum(balance_amount) as total_balance
, credit_limit
, case 
        when ROUND(CAST(SUM(balance_amount) AS REAL) / CAST(credit_limit AS REAL), 2) < .3 then 1
        when ROUND(CAST(SUM(balance_amount) AS REAL) / CAST(credit_limit AS REAL), 2) > .5 then 0.5
        else 0.7
        end as credit_score

from credit_card_bills cb
join customers c on c.customer_id = cb.customer_id
group by c.customer_id, credit_limit)
,

bill as (select 
customer_id
, loan_id as loan_bill_id 
, loan_due_date as due_date
from loans
union all 
select 
customer_id
, bill_id
, bill_due_date
from credit_card_bills)
,
ranking as (
select customer_id
, b.loan_bill_id
, due_date
, transaction_date
, (case when transaction_date <= due_date then 1 else 0 end) as rnk


from bill b
join customer_transactions ct
on b.loan_bill_id = ct.loan_bill_id)
,
final as (
select customer_id
, round(cast(sum(rnk) as Real)/count(*),2) as pmt_ratio
from ranking
group by customer_id)


select
cur.customer_id
, ((pmt_ratio*70) + (credit_score*30)) as cibil_score
from cur 
inner join final on cur.customer_id = final.customer_id


Official Solution

with all_bills as (
select customer_id,loan_id as bill_id,loan_due_date as due_date,0 as balance_amount 
from loans 
union all
select customer_id,bill_id,bill_due_date as due_date, balance_amount 
from credit_card_bills 
)
, on_time_calc as 
(select b.customer_id,sum(b.balance_amount ) as balance_amount ,count(*) as total_bills , sum(case when ct.transaction_date<=due_date then 1 else 0 end) as on_time_payments
from all_bills b 
inner join customer_transactions ct on b.bill_id=ct.loan_bill_id
group by b.customer_id)
select c.customer_id , (ot.on_time_payments*1.0/ot.total_bills)*70 +
(case when ot.balance_amount *1.0/c.credit_limit < 0.3 then 1 
when ot.balance_amount *1.0/c.credit_limit < 0.5 then 0.7
else 0.5 end) * 30 as cibil_score 
from customers c 
inner join on_time_calc ot on c.customer_id=ot.customer_id
