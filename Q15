In some poorly designed UI applications, there's often a lack of data input restrictions. For instance, in a free text field for the country, users might input variations such as 'USA,' 'United States of America,' or 'US.'

Suppose we have survey data from individuals in the USA about their job satisfaction, rated on a scale of 1 to 5. Write a SQL query to count the number of respondents for each rating on the scale. Additionally, include the country name in the format that occurs most frequently in that scale.

Table: survey (primary key : name)

column name	datatype
name 	varchar(10)
job_satisfaction 	int
country 	varchar(20)

Expected output:

job_satisfaction	country	number_of_respondents
4	USA	3
5	United States	4

My_Solution

with cte as (
select job_satisfaction,
count(*) as number_of_respondents,
country,
dense_rank() over (partition by job_satisfaction order by count(country) desc) as rn
from survey
group by job_satisfaction, country)
,
cte1 as (
    select job_satisfaction, country
    from cte
    where rn = 1
)

select survey.job_satisfaction
, cte1.country
, count(*) as number_of_respondents
from survey
inner join cte1 on cte1.job_satisfaction = survey.job_satisfaction
group by survey.job_satisfaction

Official Solution

with cte as (
select country,job_satisfaction,count(*) as cnt 
from survey
group by country,job_satisfaction
)
, cte2 as (
select *, sum(cnt) over(partition by job_satisfaction) as number_of_respondents
,max(cnt) over(partition by job_satisfaction) as max_cnt
from cte
)
select job_satisfaction,country,number_of_respondents from cte2 
where cnt=max_cnt
